{"ast":null,"code":"var _jsxFileName = \"/Users/gilbertlowrey/Desktop/optimization/src/components/Demo/DemoOutput.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Demo = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: props.show ? \"This is new!\" : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n_c = Demo;\nexport default _c2 = /*#__PURE__*/React.memo(Demo);\n\n/*\nIn this example, if the props (properties) for show are truthy, this will show what I am dynamically\ncalling. If it is falsey, then it will not show. \n\nwith this\n<p>{props.show ? 'This is new!' : ''}</p>;\nparagraph element is ALWAYS rendered, just not always shown\n*/\nvar _c, _c2;\n$RefreshReg$(_c, \"Demo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Demo","props","show","memo"],"sources":["/Users/gilbertlowrey/Desktop/optimization/src/components/Demo/DemoOutput.js"],"sourcesContent":["import React from \"react\";\n\nconst Demo = (props) => {\n  return <p>{props.show ? \"This is new!\" : \"\"}</p>;\n};\n\nexport default React.memo(Demo);\n\n/*\nIn this example, if the props (properties) for show are truthy, this will show what I am dynamically\ncalling. If it is falsey, then it will not show. \n\nwith this\n<p>{props.show ? 'This is new!' : ''}</p>;\nparagraph element is ALWAYS rendered, just not always shown\n*/\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,oBAAO;IAAA,UAAIA,KAAK,CAACC,IAAI,GAAG,cAAc,GAAG;EAAE;IAAA;IAAA;IAAA;EAAA,QAAK;AAClD,CAAC;AAAC,KAFIF,IAAI;AAIV,kCAAeD,KAAK,CAACI,IAAI,CAACH,IAAI,CAAC;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}