{"ast":null,"code":"var _jsxFileName = \"/Users/gilbertlowrey/Desktop/optimization/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"./components/UI/Button/Button\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [showParagraph, setShowParagraph] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), showParagraph && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is new!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eoYUlDKWxWYgikVZpaPr2UN2QyM=\");\n_c = App;\nexport default App;\n\n/* \nQuick useState run down. I want to have a paragraph appear after a given action (timer or click for ex)\nright now, it is not visible, so I set useState() to false. I also destructure an array with the first item\nbeing the showParagraph value (true or false) and the second item being a function I will use to change the state. \nAt the beginning showParagraph is FALSE, when I call or point to setShowParagraph, I can change it to TRUE, or back\nto FALSE if it is TRUE. \n\n{showParagraph && <p>This is new!</p>} looks for showParagraph to be TRUE and shows the paragraph\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Button","App","showParagraph","setShowParagraph"],"sources":["/Users/gilbertlowrey/Desktop/optimization/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport Button from \"./components/UI/Button/Button\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [showParagraph, setShowParagraph] = useState(false);\n\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      {showParagraph && <p>This is new!</p>}\n      <Button></Button>\n    </div>\n  );\n};\n\nexport default App;\n\n/* \nQuick useState run down. I want to have a paragraph appear after a given action (timer or click for ex)\nright now, it is not visible, so I set useState() to false. I also destructure an array with the first item\nbeing the showParagraph value (true or false) and the second item being a function I will use to change the state. \nAt the beginning showParagraph is FALSE, when I call or point to setShowParagraph, I can change it to TRUE, or back\nto FALSE if it is TRUE. \n\n{showParagraph && <p>This is new!</p>} looks for showParagraph to be TRUE and shows the paragraph\n*/\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAO,WAAW;AAAC;AAEnB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAEzD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,EACjBG,aAAa,iBAAI;MAAA,UAAG;IAAY;MAAA;MAAA;MAAA;IAAA,QAAI,eACrC,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAU;EAAA;IAAA;IAAA;IAAA;EAAA,QACb;AAEV,CAAC;AAAC,GAVID,GAAG;AAAA,KAAHA,GAAG;AAYT,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}